def instructions():  # Function 1 - Instructions of Tic Tac Toe
    print("\n")
    print("*** Welcome to Tic Tac Toe! ***")
    print("\n")
    print("This is a two player game. One player will be X and the other will be O.")
    print("Take turns in placing an X and an O on the board.")
    print(
        "The aim of the game is to achieve three X or O in a row. This can be achieved vertically, horizontally or "
        "diagonally.")
    print(
        "The numbers in the board below represent the space an X or O can sit in. You will be asked to input a number "
        "to determine your move.")


def display_board(board):  # Function 2 - Tic Tac Toe board to play on
    print("\n")
    print("Tic Tac Toe")  # Board is created through a series of strings and indexed variables.
    print(' ___________')  # This allows the ability to place X and O later on
    print('|   |   |   |')
    print('| ' + board[1] + ' | ' + board[2] + ' | ' + board[3] + ' |')
    print('|___|___|___|')
    print('|   |   |   |')
    print('| ' + board[4] + ' | ' + board[5] + ' | ' + board[6] + ' |')
    print('|___|___|___|')
    print('|   |   |   |')
    print('| ' + board[7] + ' | ' + board[8] + ' | ' + board[9] + ' |')
    print('|___|___|___|')
    print('\n')


test_board = ['#', '1', '2', '3', '4', '5', '6', '7', '8', '9']
game_board = ['#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']


def player_input():  # Function 3 - Allocate X and O to players
    marker = " "  # While loop allows unlimited attempts to obtain X and O
    while marker not in ["X", "O"]:  # "While marker not in X or O, ask for input"
        marker = input("Player 1: Choose X or O:\t").upper()
        if marker == "X":  # if statememt is indented ahead of while loop so it comes under while loop
            print("\n")
            print("Player 1 is X | Player 2 is O")
            print("\n")  # if, elif and else allows you to create multiple conditions to execute different codes
            return ("X",
                    "O")  # This allows you to allocate X or O to each player or provide error message for further clarification
        elif marker == "O":
            print("\n")
            print("Player 1 is O | Player 2 is X")
            print("\n")
            return ("O", "X")
        else:
            print("\n")
            print("**ERROR**|\t Game can only accept X or O. Choose between X or O:\t")


def place_marker(board, marker, position):  # Function 4 - Input X, O into Tic Tac Toe board
    # board (test_board, game_board), marker (X or O), position (1-9)
    # "At boards position, place marker"

    # place_marker(game_board,"&",3)
    board[position] = marker  # print(game_board)


def win_check(board, mark):  # Function 5 - detect win or draw
    return ((board[7] == mark and board[8] == mark and board[
        9] == mark) or  ## bottom horizontal                #return true
            (board[4] == mark and board[5] == mark and board[
                6] == mark) or  ## middle horizontal                        #Sequences to return i.e. 7 and 8 and 9
            (board[1] == mark and board[2] == mark and board[
                3] == mark) or  ## top horizontal                           #or allows multiple conditions to be true
            (board[1] == mark and board[4] == mark and board[
                7] == mark) or  ## left vertical                            #
            (board[2] == mark and board[5] == mark and board[8] == mark) or  ## middle vertical
            (board[3] == mark and board[6] == mark and board[9] == mark) or  ## right vertical
            (board[7] == mark and board[5] == mark and board[3] == mark) or  ## diagonal
            (board[9] == mark and board[5] == mark and board[1] == mark))  ## diagonal


import random


def who_goes_first():  # Function 6 - Decide at random who goes first
    if random.randint(0, 1) == 0:  # Use of random function to determine who goes first
        return "Player 2"
    else:
        return "Player 1"


def space_free(board, position):  # Function 7 - Check if space is free
    return board[position] == " "  # return True or False if position is empty


def full_board(board):  # Function 8 - Check if board is full
    for i in range(1, 10):  # 1-10 as there are 9 positions in total
        if space_free(board, i):  # if space_free function returns True i.e. space is empty.
            return False  # return False because board is not full
    return True  # once for loop is complete and has not detected any empty spaces, return true because board is full


def player_choice(board):
    position = 0  # Benchmark variable for code to initally go by
    while position not in [1, 2, 3, 4, 5, 6, 7, 8, 9] or not space_free(board,
                                                                        position):  # while position is not in position 1-9 and position is not free (via space_free function)
        position = int(input('Choose your next position: (1-9): \t'))  ##user input - choose position
        if position not in range(1, 10):
            print('**ERROR**|\t Please enter number: (1-9):\t')
            print('\n')
    return position


def replay():  # Function 10 - Play again?
    marker = " "
    while marker not in ["Y", "N"]:
        marker = input(
            'Do you want to play again? Enter Y (yes) or N (no):\t').upper()  # .upper() converts string into uppercase
        if marker == "Y":
            print("\n")
            return True
        elif marker == "N":
            print("\n")
            print("Game Over")
            print("\n")
            return False
        else:
            print("\n")
            print("**ERROR**|\t Enter Y to play again or N to quit:\t")


theBoard = [' '] * 10
display_board(theBoard)

while True:

    instructions()
    display_board(test_board)

    # Reset the board
    theBoard = [' '] * 10  # same as ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
    player1_marker, player2_marker = player_input()
    turn = who_goes_first()  # outcome of function is converted into variable for use later on
    print(turn + ' will go first.')

    play_game = " "
    game_on = False
    while play_game not in ["Y", "N"]:
        play_game = input('Are you ready to play? Enter Y (yes) or N (no):\t').upper()

        if play_game == 'Y':
            game_on = True
        elif play_game == 'N':
            game_on = False
        else:
            print("\n")
            print("**ERROR**| Enter Y to play or N to quit:\t")

        while game_on:
            if turn == 'Player 1':
                # Player1's turn.

                display_board(theBoard)
                position = player_choice(theBoard)
                place_marker(theBoard, player1_marker, position)

                if win_check(theBoard, player1_marker):
                    display_board(theBoard)
                    print('Congratulations! Player 1 has won!')
                    print("\n")
                    game_on = False
                else:
                    if full_board(theBoard):
                        display_board(theBoard)
                        print('The game is a draw!')
                        print("\n")
                        break
                    else:
                        turn = 'Player 2'

            else:
                # Player2's turn.

                display_board(theBoard)
                position = player_choice(theBoard)
                place_marker(theBoard, player2_marker, position)

                if win_check(theBoard, player2_marker):
                    display_board(theBoard)
                    print('Player 2 has won!')
                    print("\n")
                    game_on = False
                else:
                    if full_board(theBoard):
                        display_board(theBoard)
                        print('The game is a draw!')
                        print("\n")
                        break
                    else:
                        turn = 'Player 1'

    if not replay():
        break
